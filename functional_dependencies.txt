career_cluster(cluster_title)

No functional dependencies.

No lossless decompositions.

---
nwcet(nwcet_title)

No functional dependencies.

No lossless decompositions.

---
soc(soc_title)

No functional dependencies.

No lossless decompositions.

---
job(job_code, pay_type, pay_rate, cate_code)

functional dependency:
job_code --> pay_type, pay_rate, cate_code

No lossless decompositions.

---
job_skill(importance, job_code, ks_code)

No functional dependencies. 

No lossless decompositions.

---
job_category(cate_code, parent_cate, pay_range_high, pay_range_low, ks_code, title)

functional dependency:
cate_code --> parent_cate, pay_range_high, pay_range_low, ks_code,  title
cate_code --> title 

No functional dependencies.

---
job_listing(listing_id,  job_code, comp_id)

functional dependency:
listing_id --> job_code, comp_id

No lossless decompositions.

---
company(comp_id, city, state, zip, comp_name, website, primary_sector, n_code)

functional dependency:
comp_id --> city, state, zip, comp_name, website, primary_sector, n_code
comp_id --> comp_name 

No functional dependencies.

---
naics(n_code, specialty, hierarchy)

functional dependency:
n_code --> specialty, hierarchy
n_code --> speciality

No functional dependencies.

---
knowledge_skill(ks_code, title, cluster_title, tier_level)

functional dependency:
ks_code --> title, cluster_title, tier_level
ks_code --> title

No functional dependencies.

---
paid_by(listing_id, per_id)

functional dependency:
listing_id --> per_id

No lossless decompositions.

---
// TODO
career_tier(tier_level, tier_description)

functional dependency:
tier_level --> tier_description
tier_description --> tier_level

---
course_knowledge(ks_code, c_code)

No functional dependencies. 

No lossless decompositions.

---
// TODO
course(c_code, title, level, description, status, prereq)

functional dependency:
c_code --> title, level, description, status, prereq
title --> c_code, level, description, status, prereq
description --> c_code, level, title, status, prereq

---
section(sec_id, start_date, end_date, format, offered_by, price, c_code)

functional dependency:
sec_id --> start_date, end_date, format, offered_by, price, c_code

No lossless decompositions.

---
takes(per_id, sec_id)

No functional dependencies.

No lossless decompositions.

---
person_skill(ks_code, per_id)

No functional dependencies.

No lossless decompositions.

---
job_history(end_date, start_date, per_id, listing_id)

No functional dependencies.

No lossless decompositions.

---
// TODO
person(per_id, name, city, state, zip)

functional dependency:
per_id --> name, city, state, zip
zip --> city 
city --> state 

---
phone_number(number, type, per_id)

functional dependency:
number --> type, per_id

No lossless decompositions.
