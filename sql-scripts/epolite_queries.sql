
Description: Gets list of a company workers by name
--1
SELECT PERSON.NAME
FROM PAID_BY INNER JOIN PERSON
ON PAID_BY.PER_ID = PERSON.PER_ID
INNER JOIN JOB_LISTING
ON PAID_BY.LISTING_ID = JOB_LISTING.LISTING_ID
WHERE COMP_ID = 13;


Description: Gets list of a company staff by salary in descending order
--2
SELECT NAME, PAY_RATE 
FROM PERSON INNER JOIN PAID_BY
ON PERSON.PER_ID = PAID_BY.PER_ID
INNER JOIN JOB_LISTING
ON JOB_LISTING.LISTING_ID = PAID_BY.LISTING_ID
INNER JOIN JOB 
ON JOB_LISTING.JOB_CODE = JOB.JOB_CODE
WHERE COMP_ID = 13 
AND PAY_TYPE = 'salary'
ORDER BY PAY_RATE DESC;

Description: Gets list of companies labor cost in descending order
--3
SELECT COMP_ID, SUM(NVL(PAY_RATE,0) + NVL(HOURS * PAY_RATE, 0)) AS TOTAL_SAL
FROM PAID_BY INNER JOIN COMP_JOB
ON PAID_BY.JOB_CODE = COMP_JOB.JOB_CODE
INNER JOIN JOB
ON JOB.JOB_CODE = COMP_JOB.JOB_CODE
GROUP BY COMP_ID
ORDER BY TOTAL_SAL DESC;



Description: Gets all jobs a person is currently holding and worked in the
past
--4
SELECT PER_ID, JOB_TITLE, START_DATE, END_DATE
FROM JOB_HISTORY NATURAL JOIN JOB
WHERE PER_ID=2;


Description: Gets a list of all job categories that a person is qualified for
--13
SELECT PER_ID, TITLE
FROM PERSON_SKILL NATURAL JOIN JOB_CATEGORY
WHERE PER_ID=7;


--14



Description: Gets a list of people and their email who are qualified for a specific job. 
--15
SELECT DISTINCT NAME, EMAIL 
FROM PERSON A INNER JOIN PERSON_SKILL B
ON A.PER_ID = B.PER_ID 
WHERE NOT EXISTS (

  -- get skills of specific job
  SELECT JOB_SKILL.KS_CODE
  FROM JOB_SKILL
  WHERE JOB_CODE=44
  
  MINUS
  
  -- get skills of person 
  (SELECT KS_CODE
  FROM PERSON C INNER JOIN PERSON_SKILL D 
  ON C.PER_ID = D.PER_ID
  WHERE A.NAME = C.NAME)
);


Description: Gets a list of people who miss only one skill for a specified job
--16
SELECT NAME
FROM PERSON
WHERE NOT EXISTS (
     SELECT JOB_SKILL.KS_CODE, KNOWLEDGE_SKILL.TITLE 
FROM JOB_SKILL LEFT JOIN KNOWLEDGE_SKILL 
ON JOB_SKILL.KS_CODE = KNOWLEDGE_SKILL.KS_CODE
WHERE JOB_CODE=67
MINUS
SELECT PERSON_SKILL.KS_CODE, KNOWLEDGE_SKILL.TITLE 
FROM PERSON_SKILL LEFT JOIN KNOWLEDGE_SKILL 
ON PERSON_SKILL.KS_CODE = KNOWLEDGE_SKILL.KS_CODE
);



Description: Gets the skillID and the number of people in the missing-one
list for a given job in the ascending order of the people counts.
--17
SELECT DISTINCT PERSON_SKILL.KS_CODE, COUNT(DISTINCT NAME) AS TOTAL_COUNT
FROM (
  SELECT NAME
FROM PERSON
WHERE NOT EXISTS (
     SELECT JOB_SKILL.KS_CODE, KNOWLEDGE_SKILL.TITLE 
FROM JOB_SKILL LEFT JOIN KNOWLEDGE_SKILL 
ON JOB_SKILL.KS_CODE = KNOWLEDGE_SKILL.KS_CODE
WHERE JOB_CODE=67
MINUS
SELECT PERSON_SKILL.KS_CODE, KNOWLEDGE_SKILL.TITLE 
FROM PERSON_SKILL LEFT JOIN KNOWLEDGE_SKILL 
ON PERSON_SKILL.KS_CODE = KNOWLEDGE_SKILL.KS_CODE)
), PERSON_SKILL, JOB
WHERE JOB_CODE=91
GROUP BY PERSON_SKILL.KS_CODE
ORDER BY TOTAL_COUNT ASC;





Description: Gets the list of person who miss the least number of skills and 
reported the least number
--18
SELECT NAME, COUNT(DISTINCT JOB_SKILL.KS_CODE) AS NUMB_SKILLS
FROM PERSON, JOB_SKILL
WHERE NOT EXISTS (
SELECT JOB_SKILL.KS_CODE, KNOWLEDGE_SKILL.TITLE
FROM JOB_SKILL LEFT JOIN KNOWLEDGE_SKILL 
ON JOB_SKILL.KS_CODE = KNOWLEDGE_SKILL.KS_CODE
WHERE JOB_CODE=23
MINUS
SELECT PERSON_SKILL.KS_CODE, KNOWLEDGE_SKILL.TITLE
FROM PERSON_SKILL LEFT JOIN KNOWLEDGE_SKILL 
ON PERSON_SKILL.KS_CODE = KNOWLEDGE_SKILL.KS_CODE)
GROUP BY NAME;


Description: Gets a list of the people IDs and the number of missing skills
for the people who miss only up to 2-skills in ascending order of missing
skills
--19



Description: Gets a list of each skillID and the number of people who need
it in descending order of the people counts
--20
